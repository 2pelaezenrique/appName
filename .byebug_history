continue
Material.in(name: [ /BACHILLERATO/ ]).count
continue
Material.in(name: [ /Matriz/ ]).count
Material.in(name.split(" "): [ "Matriz" ]).count
Material.first.name.split(" ")
Material.first.name.split("")
Material.first.name
Material.in(name: [ "Matriz" ]).count
Material.in(name: [ "Matriz" ])
Material.first.name
Material.first
Material
continue
Material.where(user_id: @material.user_id).count
continue
Material.where(username: "epelaez1").count
Material.where(username: "epelaez1")
Material.find_by(username: "epelaez1")
Material.find_by(username: "epelaez1")[1]
Material.find_by(username: "epelaez1")[0]
Material.find_by(username: "epelaez1")
Material.find_by(username: "epelaez1").count()
Material.find_by(username: "epelaez1").length
Material.find_by(username: "epelaez1")
@material.username
Material.find_by()
Material.find_by().pretty()
Material.find_by()
Material.find()
Material.all
Material
User
User.username
User
Users
User
@User
@Users
continue
@material.user.avatar_file_size
@material.user.avatar_content_type
@material.user.avatar_file_name
@material.user
@material.user.avatar
@material.user.avatar[:avatar_file_size]
@material.user.avatar{
@material.user.avatar
@material.user.avatar.avatar_file_size
@material.user.avatar
@material.user
continue
!@show_video
@show_video == true
@show_video == false
@show_video
exit
continue
material.format
material.type
material
exit
params[:material][:file] === nil
params[:material][:file] == nil
params[:material]
params[:material][:file]
exit
params[:material][:file].content_type
params[:material][:file][:content_type]
params[:material][:file]
params[:material]
params["file"]
params[:file]
params
continue
@welcomePage
continue
@welcomePage
continue
!@hola
@hola
controller.request.env["PATH_INFO"]
controller.request.env[:delegate]
controller.request.env.delegate
controller.request.env
controller.request["PATH_INFO"]
controller.request.Request
controller.request.request
controller.request[0]
controller.request[:request]
controller.request[:delegate]
controller.request[:proxies]
controller.request[proxies]
controller.request.first
controller.request.proxies
controller.request.delegate
controller.request
controller["@_request"]
controller.@_request
controller["@_request"]
controller[@_request]
controller[:@_request]
controller
controller.first
controller[0]
controller
controller.name
controller
continue
request.query_parameters
continue
!request.query_parameters
request.query_parameters == false
request.query_parameters == true
request.query_parameters
continue
query
continue
request.query_parameters
request
params[0]
params[1]
params.second
params.first
params[0]
params
params[0]
params.1
params
continue
Material.where({"name" => "Matrices", "subject" => "Matematicas"}).count()
Material.where({"name" => "Matrices", "subject" => "Matematicas"}).count
Material.where({"name" => "Matrices"}).count
Material.where({"name" => "Matrices"})
Material.where("name" => "Matrices").count
Material.where("name" => "Matrices")[0]
Material.where("schools" => ["Andalucía"])[0]
Material.where("schools" => ["Andalucía"])
Material.where("schools" => ["Andalucía"]).all
Material.where(schools => ["Andalucía"]).all
Material.all[2]
Material.all[3]
Material.all[1]
Material.all[0]
Material.all[]
Material.find[3]
Material[3]
Material.[3]
Material.all
Material.where("school" => ["Andalucía"]).all
Material.where("school" => ["Andalucía"])[0]
Material.where("school" => ["Andalucía"]).first
Material.where("school" => ["Andalucía"])
Material.where(school => ["Andalucía"])
continue
Material.all
Material
Material.type()
object.is_a?()
type()
object.is_a?
typeof 
Material
material
params.length
!params == false
params == true
!params
params
continue
Material.where(params.first[0] => params.first[1]).first
Material.where(params.first[0] => params.first[1])
continue
Material.where(params.first[0]: params.first[1])
Material.where(params.first[0]:params.first[1])
params.first[1]
params.first[0]
params.first
params[0]
params
Material.where(subject:params["type"])[0]
Material.where(subject:params["type"])
params["type"]
continue
Material.where(subject:params["type"]+"s")[0]
Material.where(subject:params["type"]+s)[0]
Material.where(subject:params["type"])[0]
Material.where(subject:params["type"])
Material.where(subject:params["type"])[0]
params["type"]
params
Material.where(name:"Matrices")[0]
Material.where(name:"Matrices").all[1]
Material.where(name:"Matrices")[1]
Material.where(name:"Matrices").all[1]
Material.where(name:"Matrices").all[0]
Material.where(name:"Matrices").all
Material.where(name:"Matrices")
Material.where(name : "Matrices")
Material.all
Material.all.
Material.all.1
Material.all.find
Material.all.find()
Material.all[1]
Material.all[]
Material.all.last
Material.all.first
Material.all[1]
Material.all[2]
Material.all[1]
Material.all[0]
Material.all 
Material.all -h
Material.all -help
Material.all
Material.all.last
pry
Material.all.first
Material.all
Material ls
ls Material
Material.all
Material
@materials
continue
help
@material
exit
@material
exit
@material
exit
@material
finish
quit
finish
quit
finish
help
next
@material
exit
@material
@materials
exit
@material
params
exit
params
exit
@material
exit
@material
exit
current_user.username
