continue
current_user.materials
current_user.has_materials?
current_user
User
exit
continue
Yt.configuration.api_key
ENV["YOUTUBE_API_KEY"]
continue
ENV["YOUTUBE_API_KEY"]
E
continue
@list
continue
Material.first.has_favorites?
Material.first
Material
current_user.favorite?
current_user.favorites?
current_user.has_favorites?
current_user.has_materials?
current_user
continue
Material.where('favorites.user_id' => current_user.id.to_s).count
Material.where('favorites.user_id' => current_user.id.to_s)
current_user.id.to_s
current_user.id
Material.first.favorites[0].user_id
Material.first.favorites.user_id
Material.first.favorites
Material.first
Material
Material.where('favorites.user_id' => current_user.id).count
Material.where('favorites.user_id' => current_user.id)
Material.where(:'favorites.user_id' => current_user.id).count
Material.where(:'favorites.user_id' => current_user.id)
Material
continue
Material.where(tags: Regexp.new('/#{@material.tags}/', true))
@material.tags
continue
Material.in(tags: @material.tags).count
Material.in(tags: @material.tags)
@material
Material
continue
@material.tags.split(",")
@material.tags
@material.tags.split(",")
@material.tags
continue
file_type
continue
validate_format
continue
params[:material][:file].content_type
file_type
continue
@material.file.instance.file_content_type
@material.file.instance
@material.file.file_file_name
@material.file.name
@material.file,name
@material.file
@material.file["file_content_type"]
@material.file.file_content_type
@material.file
@material.file.file_type
@material.file
continue
file_type
params[:material][:format]
validate_format
continue
ENV["YOUTUBE_API_KEY"]
continue
ENV["YOUTUBE_API_KEY"]
continue
byebug
continue
exit
params[:body]
params
params[:material_id]
params[:id]
continue
@material.description
continue
Yt.configuration.api_key
ENV["YOUTUBE_API_KEY"]
continue
ENV["YOUTUBE_API_KEY"]
Yt.configuration.api_key
continue
Material.find("56a5a02030830f1438000000").video_duration/60
Material.find("56a5a02030830f1438000000").video_duration
Material.find("56a5a02030830f1438000000")
Material
continue
3016%60
3016/60
video.duration
Yt.configure do |config| config.log_level = :debug end
Yt.configure do |config|
video.duration
video = Yt::Video.new id: "DZ1ryPQ5CBE"
Yt.configuration.api_key = "AIzaSyDkKRs1wfkzVePBTPOF9NQFqeX-v8InKDo"
Yt
exit
yt
Yt
Yt.configuration.api_key = "AIzaSyDkKRs1wfkzVePBTPOF9NQFqeX-v8InKDo"
continue
CONTINUE
Material.find(params[:id]).favorites.where({user_id: current_user.id}).count
Material.find(params[:id]).favorites.where({user_id: current_user.id}).COUNT
Material.find(params[:id]).favorites.where({user_id: current_user.id})
continue
Material.find(params[:material_id]).favorites.where({user_id: current_user.id}).first
Material.find(params[:material_id]).favorites.where({user_id: current_user.id})
Material.find(params[:material_id]).favorites.where({user_id: current_user.id}).first
Material.find(params[:id]).favorites.where({user_id: current_user.id}).first
continue
Material.where(:'favorites.user_id' => current_user.id).count
Material.where(:'favorites.user_id' => current_user.id)
Material.first.favorites
Material.first.favorite
Material.first
Material
Material.favorite
Material.favorites
Material.where({'favorites.user_id' : current_user.id})
Material.where(:favorites.user_id => current_user.id)
Material.where(favorites.user_id: current_user.id)
Material.first.favorites.first.user_id
Material.first.favorites.first
Material.first.favorites
Material.first
Material.where()
Material.first
params
Material.find()
Material
User.find(current_user.id).favorites
User.find(current_user.id)
current_user.id
current_user
continue
current_user
User.find(current_user.id)
User.find()
User
continue
alreadyInFavs?(params[:material_id])
!alreadyInFavs?(params[:material_id])
continue
@material.favorites.count
@material.favorites
@material
continue
@material
continue
Material.find(params[:id]).favorites.where({user_id: current_user.id}).count
params
continue
Material.find(params[:material_id]).favorites.where({user_id: current_user.id}).count
Material.find(params[:material_id]).favorites.where({user_id: current_user.id})
continue
Material.find(params[:material_id]).favorites.where({user_id: current_user.id})
Material.find(params[:material_id]).favorites.where({user_id: current_user.id}).count
Material.find(material_id).favorites.where({user_id: current_user.id}).count
Material.find(material_id).favorites.where({user_id: current_user.id})
alreadyInFavs?(params[:material_id])
continue
alreadyInFavs?(params[:material_id])
alreadyInFavs?
continue
request.env["HTTP_X_REQUESTED_WITH"]
!request.env["HTTP_X_REQUESTED_WITH"]
request.env["HTTP_X_REQUESTED_WITH"] == false
request.env["HTTP_X_REQUESTED_WITH"] == true
request.env["HTTP_X_REQUESTED_WITH"]
continue
if request.env["HTTP_X_REQUESTED_WITH"] \n puts "hi" \n else \n puts "no" \n end
if request.env["HTTP_X_REQUESTED_WITH"] \n
if request.env["HTTP_X_REQUESTED_WITH"]
request.env["HTTP_X_REQUESTED_WITH"]
request.env["HTTP_X_REQUESTED_WITH"]?
!request.env["HTTP_X_REQUESTED_WITH"]
request.env
request
request.env["HTTP_X_REQUESTED_WITH"]
continue
request.env["HTTP_X_REQUESTED_WITH"]
request.env["HTTP_REQUESTED_WITH"]
request.env
request.env.HTTP_X_REQUESTED_WITH
request.HTTP_X_REQUESTED_WITH
request
continue
JSON.pretty_generate(JSON.parse(request))
JSON.pretty_generate(request)
JSON.pretty_generate()
JSON
request.to_yaml
request.to_yml
y request
request.pretty
request.type
request.ty√®
request.xhr?
request
request.xhr?
params[:material_id]
params
continue
params[:id]
params
continue
params[:material_id]
:material_id
continue
Material.first.user
Material.first
Material
continue
Material.first.destroy()
Material.first.drop
Material.first.drop()
Material.first.user
Material.first
Material
Materials
Material.find().first()
Material.find().first
Material
continue
byebug
Material.first.user.username
Material.first.user
Material.first
Material
Materials
current_user.id
current_user._id
current_user
current_user.id
current_user.materials
current_user.materials.first
current_user.materials.pretty()
current_user.materials.pretty)(
current_user.materials
current_user
User
continue
